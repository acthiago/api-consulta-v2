networks:
  api_network:
    driver: bridge
  monitoring_network:
    driver: bridge

volumes:
  prometheus_data:
  grafana_data:
  redis_data:

services:
  # ===== API Principal =====
  api:
    image: ${DOCKER_HUB_USERNAME}/poc-api-consulta-v2:latest
    container_name: api-consulta-v2-production
    restart: unless-stopped
    environment:
      - ENVIRONMENT=production
      - DEBUG=false
      - MONGO_URI=${MONGO_URI}
      - DATABASE_NAME=api_consulta_v2_prod
      - SECRET_KEY=${SECRET_KEY}
      - JWT_ACCESS_TOKEN_EXPIRE_MINUTES=30
      - JWT_REFRESH_TOKEN_EXPIRE_DAYS=7
      - ENABLE_CORS=true
      - CORS_ORIGINS=["*"]
      - ENABLE_METRICS=true
      - HOST=0.0.0.0
      - PORT=8000
      - REDIS_URL=redis://redis:6379/0
      - PROMETHEUS_METRICS_PORT=8001
    ports:
      - "8000:8000"
    networks:
      - api_network
      - monitoring_network
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # ===== Redis Cache =====
  redis:
    image: redis:7-alpine
    container_name: api-consulta-v2-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    networks:
      - api_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ===== Redis Exporter for Prometheus =====
  redis-exporter:
    image: oliver006/redis_exporter:latest
    container_name: api-consulta-v2-redis-exporter
    restart: unless-stopped
    environment:
      - REDIS_ADDR=redis://redis:6379
    ports:
      - "9121:9121"
    depends_on:
      - redis
    networks:
      - api_network
      - monitoring_network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9121/metrics"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ===== Prometheus Monitoring (Simplificado) =====
  prometheus:
    image: prom/prometheus:latest
    container_name: api-consulta-v2-prometheus
    restart: unless-stopped
    volumes:
      - ./monitoring/prometheus-vps:/etc/prometheus:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus-simple.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=15d'
      - '--web.enable-lifecycle'
      - '--log.level=info'
    ports:
      - "9090:9090"
    networks:
      - monitoring_network
    depends_on:
      - api
      - redis-exporter
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # ===== Grafana Dashboard (Simplificado) =====
  grafana:
    image: grafana/grafana:latest
    container_name: api-consulta-v2-grafana
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_LOG_LEVEL=info
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning-vps:/etc/grafana/provisioning:ro
    networks:
      - monitoring_network
    depends_on:
      - prometheus
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
